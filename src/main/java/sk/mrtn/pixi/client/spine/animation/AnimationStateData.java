package sk.mrtn.pixi.client.spine.animation;

import jsinterop.annotations.JsConstructor;
import jsinterop.annotations.JsProperty;
import jsinterop.annotations.JsType;
import sk.mrtn.pixi.client.spine.SkeletonData;

/**
 * Since applying animations with crossfading is very common, AnimationState makes it more convenient.
 * First AnimationStateData is configured with the durations to crossfade each pair of animations.
 * AnimationStateData is stateless and can be used with multiple AnimationState instances.
 * Next, AnimationState takes an AnimationStateData and is told what animation to use.
 * When the AnimationState animation changes, it does the mixing automatically.
 *
 * @author Tomas Ecker
 */
@JsType(isNative = true, namespace = "PIXI.spine.core")
public class AnimationStateData {

    @JsProperty
    public SkeletonData skeletonData;

    @JsConstructor
    public AnimationStateData(SkeletonData skeletonData){};

    //region AUTOGENERATED METHODS AND FIELDS - not used
    // PUBLIC STATIC FIELDS
    @JsProperty
    public static boolean deprecatedWarning1;

    // PUBLIC STATIC METHODS
    //endregion

}

